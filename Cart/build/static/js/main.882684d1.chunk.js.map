{"version":3,"sources":["Components/List.js","Components/Cart.js","Components/Header.js","Components/App.js","serviceWorker.js","index.js"],"names":["List","className","this","props","itemList","map","item","index","name","cost","onClick","getItem","React","Component","Cart","cartItem","countDecrement","count","countIncrement","deleteItem","totalCost","deleteAll","Header","App","state","list","cart","total","isAdded","itemReceived","added","i","length","setState","setTotalCost","deleteItemReceived","carts","splice","deleteAllCartItems","itemCountIncrement","newInc","itemCountDecrement","decrement","newDec","sum","reduce","num","console","log","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.882684d1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass List extends React.Component {\r\n    render() { \r\n        // console.log(this.props)\r\n        return ( \r\n            <div className=\"productList\">\r\n                <ul>\r\n                     {this.props.itemList.map((item, index)=>{\r\n                         return(\r\n\r\n                             <li>\r\n                                 <span>{item.name}</span>\r\n                                 <span>{item.cost}</span>\r\n                                 \r\n                                 <button onClick={()=>{this.props.getItem(index)}}> Add to Cart</button>\r\n                             </li>\r\n                             \r\n                         )\r\n                     })}\r\n                </ul>\r\n              \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default List;","import React from 'react'\r\n\r\nclass Cart extends React.Component {\r\n    render() { \r\n        return ( \r\n            <div className=\"cart\">\r\n                <ul>\r\n                    {this.props.cartItem && this.props.cartItem.map((item, index)=>{\r\n                        return(\r\n                            <li>\r\n                               <div className=\"sec1\"> <span>{item.name}</span>  <span className=\"cost\">Rs.{item.cost}</span>\r\n                                 <button onClick={()=>{this.props.countDecrement(index)}}>-</button>{item.count}<button onClick={()=>{this.props.countIncrement(index)}}>+</button>\r\n                                 </div> <div className=\"sec2\"><button onClick={()=>{this.props.deleteItem(index)}} >Remove</button></div>\r\n                            </li>\r\n                        )\r\n\r\n                    })}\r\n                </ul>\r\n                <span>Total : {this.props.totalCost}</span><br/>\r\n                <button className=\"checkout\" onClick={()=>{this.props.deleteAll()}}>Checkout</button>\r\n\r\n\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Cart;","import React from 'react'\r\n\r\nclass Header extends React.Component {\r\n    render() { \r\n        return ( \r\n            <div className=\"header\">\r\n                <span>Header</span>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Header;","import React from 'react';\nimport './../App.css';\nimport List from './List'\nimport Cart from './Cart'\nimport Header from './Header'\n\n\nclass App extends React.Component {\n  state = {\n    list: [\n      {\n        name:\"Product1\",\n        cost: 10,\n        count: 1\n        \n      },\n      {\n        name:\"Product2\",\n        cost: 30,\n        count: 1\n        \n      },\n      {\n        name:\"Product3\",\n        cost: 20,\n        count: 1\n        \n      }\n    ],\n    cart: [],\n    total: 0,\n    isAdded:false\n  }\n  \n  itemReceived=(index)=>{\n    // console.log(index);\n    let added=false;\n    for(let i=0;i<this.state.cart.length;i++){\n        if(this.state.cart[i].name==this.state.list[index].name){\n          added=true\n        }\n    }\n    if(!added){\n    this.setState({\n      cart:[...this.state.cart, this.state.list[index]],\n      isAdded:false\n    }, ()=>{\n      this.setTotalCost()\n    })\n    \n  }\n  }\n  \n  deleteItemReceived=(index)=>{\n    // console.log(index);\n    let carts = this.state.cart;\n    carts.splice(index,1)\n    this.setState({\n      cart: carts\n    }, ()=>{\n      this.setTotalCost()\n    })\n  }\n  \n  deleteAllCartItems=()=>{\n    this.setState({\n      cart: []\n    }, ()=>{\n      this.setTotalCost()\n    })\n  }\n  \n  itemCountIncrement=(index)=>{\n    // console.log(index);\n    // console.log(this.state.cart[index].count);\n    let increment = this.state.cart[index].count;\n    \n    let newInc = increment + 1;\n    \n    let carts = this.state.cart;\n    carts[index].count = newInc;\n\n    \n    this.setState({\n      cart : carts\n    }, ()=>{\n      this.setTotalCost()\n    })\n  }\n  \n  itemCountDecrement=(index)=>{\n    // console.log(index);\n    // console.log(this.state.cart[index].count);\n    let decrement = this.state.cart[index].count;\n    if(decrement > 1){\n      \n      \n      let newDec = decrement - 1;\n      \n      let carts = this.state.cart;\n      carts[index].count = newDec;\n      \n      this.setState({\n        cart : carts\n      }, ()=>{\n        this.setTotalCost()\n      })\n    }else{\n      this.deleteItemReceived(index)\n    }\n  }\n\n  setTotalCost=()=>{\n    // console.log(this.state.cart);\n    let sum = this.state.cart.reduce((total, num)=>{\n      console.log(total, num);\n      total = total + (num.count * num.cost)\n      return total;\n    }, 0)\n    console.log(sum);\n    this.setState({\n      total : sum\n    })\n  }\n\n\n  \n  \n  \n  render(){\n    return(\n      <div className=\"wrapper\">\n      <Header/>\n      <div className=\"container\">\n      <List getItem={(index)=>{this.itemReceived(index)}} itemList= {this.state.list}/>\n      <Cart totalCost={this.state.total} countDecrement={(index)=>{this.itemCountDecrement(index)}} countIncrement={(index)=>{this.itemCountIncrement(index)}} deleteAll={()=>{this.deleteAllCartItems()}} deleteItem={(index)=>{this.deleteItemReceived(index)}} cartItem={this.state.cart}/>\n      </div>\n      </div>\n      )\n    }\n  }\n  export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}